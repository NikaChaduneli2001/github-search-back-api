version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: github-search-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - github-search-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: github-search-api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PG_HOST: ${PG_HOST}
      PG_PORT: ${PG_PORT}
      PG_DATABASE: ${PG_DATABASE}
      PG_USERNAME: ${PG_USERNAME}
      PG_PASSWORD: ${PG_PASSWORD}

      PORT: ${PORT}
      NODE_ENV: development

      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
    ports:
      - "${PORT}:3000"
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - /app/node_modules
      - ./tsconfig.json:/app/tsconfig.json
      - ./tsconfig.build.json:/app/tsconfig.build.json
      - ./nest-cli.json:/app/nest-cli.json
    networks:
      - github-search-network
    depends_on:
      postgres:
        condition: service_healthy
    command: pnpm run start:dev

volumes:
  postgres_data:
    driver: local

networks:
  github-search-network:
    driver: bridge
